{
  "name": "server",
  "version": "1.0.0",
  "main": "index.ts",
  "private": true,
  "dependencies": {
    "@prisma/client": "^2.28.0",
    "bcryptjs": "^2.4.3",
    "cors": "^2.8.5",
    "date-fns": "^2.23.0",
    "dotenv": "^10.0.0",
    "express": "^4.17.1",
    "helmet": "^4.6.0",
    "jsonwebtoken": "^8.5.1",
    "lodash": "^4.17.21",
    "morgan": "^1.10.0",
    "socket.io": "^4.1.3"
  },
  "devDependencies": {
    "@types/bcryptjs": "^2.4.2",
    "@types/cors": "^2.8.12",
    "@types/express": "^4.17.13",
    "@types/faker": "^5.5.7",
    "@types/jest": "^26.0.24",
    "@types/jsonwebtoken": "^8.5.4",
    "@types/lodash": "^4.14.171",
    "@types/morgan": "^1.9.3",
    "@types/node": "^16.4.9",
    "@types/supertest": "^2.0.11",
    "@typescript-eslint/eslint-plugin": "^4.28.5",
    "@typescript-eslint/parser": "^4.28.5",
    "cross-env": "^7.0.3",
    "eslint": "^7.32.0",
    "eslint-plugin-simple-import-sort": "^7.0.0",
    "faker": "^5.5.3",
    "husky": "^7.0.1",
    "jest": "^27.0.6",
    "lint-staged": "^11.1.1",
    "prettier": "^2.3.2",
    "prettier-plugin-prisma": "^2.28.0",
    "pretty-quick": "^3.1.1",
    "prisma": "^2.28.0",
    "supertest": "^6.1.4",
    "ts-jest": "^27.0.4",
    "ts-node-dev": "^1.1.8",
    "tsconfig-paths": "^3.10.1",
    "typescript": "^4.3.5"
  },
  "scripts": {
    "migrate": "prisma migrate dev",
    "seed": "prisma db seed --preview-feature",
    "lint": "eslint . --fix --ext .ts && prettier --write \"src/**/*.{ts,tsx}\" --tab-width 2",
    "lint_ci": "eslint . --ext .ts && prettier --check \"src/**/*.{ts,tsx}\" --tab-width 2",
    "start": "set debug=* && prisma generate && cross-env NODE_ENV=development ts-node-dev --exit-child --respawn --transpile-only -r tsconfig-paths/register ./src/index.ts",
    "test": "cross-env NODE_ENV=test jest --runInBand --detectOpenHandles --forceExit --passWithNoTests",
    "test_ci": "jest --verbose --forceExit --runInBand --passWithNoTests",
    "production": "cd dist && cross-env NODE_ENV=production node ./src/index.js",
    "build": "tsc --build",
    "clean": "tsc --build --clean"
  },
  "lint-staged": {
    "**/*.{ts}": [
      "pretty-quick --staged",
      "eslint --fix"
    ]
  }
}
